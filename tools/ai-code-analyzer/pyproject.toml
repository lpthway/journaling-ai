[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-analyzer"
version = "0.1.0"
description = "AI-powered code analysis tool with multiple LLM providers"
readme = "README.md"
license = "MIT"
authors = [
    {name = "AI Code Analyzer Team", email = "team@ai-code-analyzer.dev"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "click>=8.1.0",
    "rich>=13.0.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "pyyaml>=6.0",
    "tomli>=2.0.0; python_version<'3.11'",
    "tomli-w>=1.0.0",
    "pathspec>=0.11.0",
    "gitpython>=3.1.0",
    "aiofiles>=23.0.0",
    "httpx>=0.24.0",
    "tenacity>=8.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "ruff>=0.0.284",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "responses>=0.23.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.1.0",
    "mkdocstrings[python]>=0.22.0",
]

[project.scripts]
ai-analyze = "ai_analyzer.cli:cli"

[project.urls]
Documentation = "https://github.com/ai-code-analyzer/ai-code-analyzer#readme"
Repository = "https://github.com/ai-code-analyzer/ai-code-analyzer"
Issues = "https://github.com/ai-code-analyzer/ai-code-analyzer/issues"
Changelog = "https://github.com/ai-code-analyzer/ai-code-analyzer/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["src/ai_analyzer"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 80
